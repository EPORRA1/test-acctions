# This is a basic workflow to help you get started with Actions

name: Actions

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Run Checkout
      - uses: actions/checkout@v2

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: Run HTTP client
      # You may pin to the exact commit or the version.
      # uses: CamiloGarciaLaRotta/watermelon-http-client@054c532cb02e9bd533ba3579cf03f8c332061713
        uses: CamiloGarciaLaRotta/watermelon-http-client@v1.5
        # with:
          # Endpoint to query
          # url: # optional, default is https://api.github.com
          # HTTP method
          # method: # optional, default is get
          # HTTP custom headers
          # headers: # optional
          # HTTP request payload
          # data: # optional
          # GraphQL query or mutation to execute. If defined, the 'data' field is automatically populated with the this payload and the 'method' is set to POST
          # graphql: # optional
          # variables for a GraphQL mutation in JSON format
          # variables: # optional, default is {}
          # name of the entrypoint GraphQL operation if multiple are defined in `graphql`
          # operation_name: # optional
      - name: Run Labeler
        uses: actions/labeler@v3
        with:
        # The GITHUB_TOKEN secret
          repo-token: "${{ secrets.GITHUB_TOKEN }}" # optional
        # The path for the label configurations
        # configuration-path: # optional, default is .github/labeler.yml
        # Whether or not to remove labels when matching files are reverted
        # sync-labels: # optional
        # wether to fail upon error HTML responses (e.g. 400, 500)
        # fail_fast: # optional
        # wether to print info-level statements or not
        # verbose: # optional
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

